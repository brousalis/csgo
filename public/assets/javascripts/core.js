(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./app/assets/javascripts/core/core.js.coffee":[function(require,module,exports){
var App, Routes, search, servers, utils;

Routes = require('./routes.js.coffee');

search = require('./libs/search.js.coffee');

servers = require('./libs/servers.js.coffee');

utils = require('./libs/utils.js.coffee');

App = (function() {
  function App(namespaces) {
    this.Routes = new Routes(this);
    search.setupEvents();
    servers.setupEvents();
    utils.setupEvents();
  }

  return App;

})();

$(function() {
  var app;
  return app = new App;
});



},{"./libs/search.js.coffee":"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/libs/search.js.coffee","./libs/servers.js.coffee":"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/libs/servers.js.coffee","./libs/utils.js.coffee":"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/libs/utils.js.coffee","./routes.js.coffee":"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/routes.js.coffee"}],"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/controllers/site_controller.js.coffee":[function(require,module,exports){
var SiteController;

SiteController = (function() {
  function SiteController() {
    return;
  }

  return SiteController;

})();

module.exports = SiteController;



},{}],"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/libs/search.js.coffee":[function(require,module,exports){
var Search;

Search = (function() {
  function Search() {
    return;
  }

  Search.prototype.setupEvents = function() {
    this.$element = $("[data-trigger='search']");
    this.$searchField = this.$element.find('.overlay-search');
    this.$closeButton = this.$element.find('.overlay-close');
    this.$searchField.on('keydown', function(e) {
      console.log('type');
      if (e.keyCode === 13 && e.preventDefault()) {
        return console.log('submit');
      }
    });
    this.$closeButton.on('click', (function(_this) {
      return function() {
        return _this.toggleOverlay('hide');
      };
    })(this));
    this.$element.on('click', (function(_this) {
      return function(e) {
        if ($(e.target).data('trigger') === 'search') {
          return _this.toggleOverlay('hide');
        }
      };
    })(this));
    $(document).on('keypress.search', (function(_this) {
      return function(e) {
        return _this.keypress(e);
      };
    })(this));
    return $(document).on('keyup', (function(_this) {
      return function(e) {
        return _this.$element.is(':visible') && 27 === e.keyCode && _this.toggleOverlay('hide');
      };
    })(this));
  };

  Search.prototype.keypress = function(e) {
    var meta, nodeName;
    e = e || event;
    nodeName = e.target.nodeName;
    meta = e.ctrlKey || e.metaKey || e.altKey;
    if (nodeName !== 'INPUT' && nodeName !== 'TEXTAREA' && !meta) {
      return this.toggleOverlay('show', String.fromCharCode(e.keyCode | e.charCode));
    }
  };

  Search.prototype.toggleOverlay = function(action, key) {
    if (action === 'show') {
      this.$element.fadeIn('fast');
      this.$element.removeClass('closed');
      if (!this.$searchField.is(':focus')) {
        this.$searchField.val(key);
        setTimeout((function(_this) {
          return function() {
            var tmp;
            _this.$searchField.focus();
            tmp = _this.$searchField.val();
            _this.$searchField.val('');
            return _this.$searchField.val(tmp);
          };
        })(this), 100);
      }
      return $(document).off('keypress.search');
    } else {
      this.$element.fadeOut('fast').addClass('closed');
      this.$searchField.val('').blur();
      return setTimeout((function(_this) {
        return function() {
          return $(document).on('keypress.search', function(e) {
            return _this.keypress(e);
          });
        };
      })(this), 100);
    }
  };

  return Search;

})();

module.exports = new Search;



},{}],"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/libs/servers.js.coffee":[function(require,module,exports){
var Servers,
  bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

Servers = (function() {
  Servers.prototype.$servers = '';

  function Servers() {
    this.updateServer = bind(this.updateServer, this);
    return;
  }

  Servers.prototype.setupEvents = function() {
    var timeout;
    this.$servers = $('.servers li div.server');
    timeout = null;
    this.$servers.find('.pinged').click((function(_this) {
      return function(e) {
        var id;
        id = $(e.currentTarget).parents('.server').data('id');
        _this._startLoading(id);
        return timeout = setTimeout(function() {
          return _this.updateServer(id);
        }, 1000);
      };
    })(this));
    return this.updateServers();
  };

  Servers.prototype.updateServer = function(id) {
    return $.ajax({
      type: 'GET',
      url: "api/v1/servers/" + id + "/status"
    }).done((function(_this) {
      return function(data) {
        _this._stopLoading(id);
        if (data.server) {
          return _this.redrawServer(data.server);
        }
      };
    })(this)).fail(function(msg) {
      return console.warn("[Servers] " + (JSON.parse(msg.responseText).error));
    });
  };

  Servers.prototype.redrawServer = function(data) {
    var $el;
    if (!data) {
      this._stopLoading(data['id']);
      return false;
    }
    $el = this._getServer(data['id']);
    $($el.find('.map_name')).text(data['map_name']);
    $($el.find('.pinged')).attr('class', "pinged " + data['pinged']);
    $($el.find('.number_of_players')).text(data['number_of_players']);
    $($el.find('.max_players')).text(data['max_players']);
    $($el.find('.pinged')).attr('title', data['ping']).tooltip('fixTitle').tooltip('show');
    return setTimeout(function() {
      return $($el.find('.pinged')).tooltip('hide');
    }, 1000);
  };

  Servers.prototype.updateServers = function() {
    var el, i, len, ref, results;
    ref = this.$servers;
    results = [];
    for (i = 0, len = ref.length; i < len; i++) {
      el = ref[i];
      results.push(this.updateServer($(el).data('id')));
    }
    return results;
  };

  Servers.prototype._getServer = function(id) {
    return $($(".server[data-id=" + id + "]")[0]);
  };

  Servers.prototype._stopLoading = function(id) {
    var s;
    s = this._getServer(id);
    s.find('.progress').css('width', '100%');
    s.find('.pinged').removeClass('loading');
    s.removeClass('loading');
    return setTimeout(function() {
      return s.find('.progress').css('width', '0');
    }, 500);
  };

  Servers.prototype._startLoading = function(id) {
    var s;
    s = this._getServer(id);
    s.addClass('loading');
    s.find('.pinged').addClass('loading');
    return s.find('.progress').show().animate({
      width: '99%'
    }, 1000);
  };

  return Servers;

})();

module.exports = new Servers();



},{}],"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/libs/utils.js.coffee":[function(require,module,exports){
var Utils;

Utils = (function() {
  function Utils() {
    return;
  }

  Utils.prototype.setupEvents = function() {
    $("[data-toggle='tooltip']").tooltip();
    $('.toggler').click(function() {
      var target;
      $(this).toggleClass('active');
      target = $(this).data('target');
      return $('.' + target).toggle();
    });
    return $(window).scroll(function() {
      if ($(window).scrollTop() > $('.navbar-top').outerHeight()) {
        return $('.navbar-primary').addClass('fixed');
      } else {
        return $('.navbar-primary').removeClass('fixed');
      }
    });
  };

  return Utils;

})();

module.exports = new Utils();



},{}],"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/routes.js.coffee":[function(require,module,exports){
var Controllers, Routes;

Controllers = {
  site_controller: require('./controllers/site_controller.js.coffee')
};

Routes = (function() {
  function Routes(app) {
    this.app = app;
    this.setController($('body').data('controller'));
    this.executeAction($('body').data('action'));
  }

  Routes.prototype.setController = function(_controller) {
    if (_controller != null) {
      if (Controllers[_controller + "_controller"] != null) {
        return this.app.Controller = new Controllers[_controller + "_controller"]();
      } else {
        return this.warn("Controller: '" + _controller + "' could not be found");
      }
    } else {
      return this.warn("data-controller is undefined");
    }
  };

  Routes.prototype.executeAction = function(_action) {
    if (_action != null) {
      if (this.app.Controller && (this.app.Controller[_action] != null)) {
        return this.app.Controller[_action]();
      } else {
        return this.warn("Controller action: '" + _action + "' could not be found");
      }
    } else {
      return this.warn("data-action is undefined");
    }
  };

  Routes.prototype.warn = function(message) {
    return console.warn("[Routes] " + message);
  };

  return Routes;

})();

module.exports = Routes;



},{"./controllers/site_controller.js.coffee":"/Users/pbrousalis/Projects/csgo/app/assets/javascripts/core/controllers/site_controller.js.coffee"}]},{},["./app/assets/javascripts/core/core.js.coffee"])
//# sourceMappingURL=data:application/json;base64,
